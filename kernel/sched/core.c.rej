--- kernel/sched/core.c
+++ kernel/sched/core.c
@@ -4614,22 +4616,41 @@ unsigned long nr_iowait(void)
 	return sum;
 }
 
-unsigned long nr_iowait_cpu(int cpu)
+#ifdef CONFIG_INTELLI_HOTPLUG
+unsigned long avg_nr_running(void)
 {
-	struct rq *this = cpu_rq(cpu);
-	return atomic_read(&this->nr_iowait);
-}
+	unsigned long i, sum = 0;
+	unsigned int seqcnt, ave_nr_running;
 
-unsigned long this_cpu_load(void)
-{
-	struct rq *this = this_rq();
-	return this->cpu_load[0];
+	for_each_online_cpu(i) {
+		struct nr_stats_s *stats = &per_cpu(runqueue_stats, i);
+		struct rq *q = cpu_rq(i);
+
+		/*
+		 * Update average to avoid reading stalled value if there were
+		 * no run-queue changes for a long time. On the other hand if
+		 * the changes are happening right now, just read current value
+		 * directly.
+		 */
+		seqcnt = read_seqcount_begin(&stats->ave_seqcnt);
+		ave_nr_running = do_avg_nr_running(q);
+		if (read_seqcount_retry(&stats->ave_seqcnt, seqcnt)) {
+			read_seqcount_begin(&stats->ave_seqcnt);
+			ave_nr_running = stats->ave_nr_running;
+		}
+
+		sum += ave_nr_running;
+	}
+
+	return sum;
 }
+EXPORT_SYMBOL(avg_nr_running);
 
 unsigned long avg_cpu_nr_running(unsigned int cpu)
 {
 	unsigned int seqcnt, ave_nr_running;
 
+	struct nr_stats_s *stats = &per_cpu(runqueue_stats, cpu);
 	struct rq *q = cpu_rq(cpu);
 
 	/*
@@ -4638,55 +4659,30 @@ unsigned long avg_cpu_nr_running(unsigned int cpu)
 	 * the changes are happening right now, just read current value
 	 * directly.
 	 */
-	seqcnt = read_seqcount_begin(&q->ave_seqcnt);
+	seqcnt = read_seqcount_begin(&stats->ave_seqcnt);
 	ave_nr_running = do_avg_nr_running(q);
-	if (read_seqcount_retry(&q->ave_seqcnt, seqcnt)) {
-		read_seqcount_begin(&q->ave_seqcnt);
-		ave_nr_running = q->ave_nr_running;
+	if (read_seqcount_retry(&stats->ave_seqcnt, seqcnt)) {
+		read_seqcount_begin(&stats->ave_seqcnt);
+		ave_nr_running = stats->ave_nr_running;
 	}
+
 	return ave_nr_running;
 }
 EXPORT_SYMBOL(avg_cpu_nr_running);
+#endif
 
-unsigned long get_avg_nr_running(unsigned int cpu)
+unsigned long nr_iowait_cpu(int cpu)
 {
-	struct rq *q;
-
-	if (cpu >= nr_cpu_ids)
-		return 0;
-
-	q = cpu_rq(cpu);
-
-	return q->ave_nr_running;
+	struct rq *this = cpu_rq(cpu);
+	return atomic_read(&this->nr_iowait);
 }
 
-unsigned long avg_nr_running(void)
+unsigned long this_cpu_load(void)
 {
-	unsigned long i, sum = 0;
-	unsigned int seqcnt, ave_nr_running;
-
-	for_each_online_cpu(i) {
-		struct rq *q = cpu_rq(i);
-
-		/*
-		 * Update average to avoid reading stalled value if there were
-		 * no run-queue changes for a long time. On the other hand if
-		 * the changes are happening right now, just read current value
-		 * directly.
-		 */
-		seqcnt = read_seqcount_begin(&q->ave_seqcnt);
-		ave_nr_running = do_avg_nr_running(q);
-		if (read_seqcount_retry(&q->ave_seqcnt, seqcnt)) {
-			read_seqcount_begin(&q->ave_seqcnt);
-			ave_nr_running = q->ave_nr_running;
-		}
-
-		sum += ave_nr_running;
-	}
-
-	return sum;
+	struct rq *this = this_rq();
+	return this->cpu_load[0];
 }
-EXPORT_SYMBOL(avg_nr_running);
+
 
 /*
  * Global load-average calculations
